# application.yml
server:
  port: 8080
  error:
    include-message: always

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}

aws:
  region: ${AWS_REGION}
  s3:
    # --- CRITICAL CHANGE START ---
    buckets: # This matches the prefix in @ConfigurationProperties(prefix = "aws.s3.buckets")
      customer: ${AWS_S3_BUCKET} # This maps to 'private String customer;' in S3Buckets.java
    # --- CRITICAL CHANGE END ---
    mock: false
    profile-image-folder: "profile-images/"

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
  allowed-methods: ${CORS_ALLOWED_METHODS:*}
  allowed-headers: ${CORS_ALLOWED_HEADERS:*}
  exposed-headers: ${CORS_EXPOSED_HEADERS:*}

logging:
  level:
    root: INFO
    com.project: DEBUG
    software.amazon.awssdk: DEBUG
    org.springframework: INFO